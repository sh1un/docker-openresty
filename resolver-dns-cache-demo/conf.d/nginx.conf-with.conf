worker_processes  1;
events { worker_connections 1024; }

http {
    lua_package_path "/usr/local/share/lua/5.1/?.lua;;";
    resolver 8.8.8.8 ipv6=off;

    server {
        listen 80;
        location /test {
            content_by_lua_block {
                local http = require "resty.http"
                local hc = http.new()
                hc:set_timeout(3000)

                -- Connect 用 domain name → 會走 resolver，且啟動時 cache
                local ok, err = hc:connect("shiun-nginx-resolver-demo.shoplinetest.com", 80)
                if not ok then
                    ngx.status = 500
                    ngx.say("connect failed: ", err)
                    return
                end

                local res, err = hc:request({
                    method = "GET",
                    path = "/",
                    headers = {
                        ["Host"] = "shiun-nginx-resolver-demo.shoplinetest.com"
                    }
                })

                if not res then
                    ngx.status = 500
                    ngx.say("request failed: ", err)
                    return
                end

                ngx.say("---- Origin response ----\n")
                ngx.say(res:read_body())
                ngx.say("\n-------------------------")
                hc:set_keepalive()
            }
        }
    }
}
